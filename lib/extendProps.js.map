{"version":3,"sources":["../src/extendProps.js"],"names":[],"mappings":";;;;;;;;kCAAmB,sBAAsB;;;;oCAClB,wBAAwB;;;;AAG/C,IAAM,WAAW,GAAG,SAAd,WAAW,CAAI,KAAK,EAAE,SAAS,EAAK;AACxC,MAAM,QAAQ,GAAG,qCAAO,EAAE,EAAE,KAAK,CAAC,CAAC;AACnC,QAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,UAAA,IAAI,EAAI;AACrC,QAAI,uCAAW,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE;AAC3B,cAAQ,CAAC,IAAI,CAAC,GAAG,YAAa;0CAAT,IAAI;AAAJ,cAAI;;;AACvB,aAAK,CAAC,IAAI,OAAC,CAAX,KAAK,EAAU,IAAI,CAAC,CAAC;AACrB,iBAAS,CAAC,IAAI,OAAC,CAAf,SAAS,EAAU,IAAI,CAAC,CAAC;OAC1B,CAAC;KACH,MAAM;AACL,cAAQ,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;KAClC;GACF,CAAC,CAAC;AACH,SAAO,QAAQ,CAAC;CACjB,CAAC;;qBAGa,WAAW","file":"extendProps.js","sourcesContent":["import assign from 'lodash/object/assign';\nimport isFunction from 'lodash/lang/isFunction';\n\n\nconst extendProps = (props, moarProps) => {\n  const newProps = assign({}, props);\n  Object.keys(moarProps).forEach(prop => {\n    if (isFunction(props[prop])) {\n      newProps[prop] = (...args) => {\n        props[prop](...args);\n        moarProps[prop](...args);\n      };\n    } else {\n      newProps[prop] = moarProps[prop];\n    }\n  });\n  return newProps;\n};\n\n\nexport default extendProps;\n"]}