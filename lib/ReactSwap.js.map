{"version":3,"sources":["../src/ReactSwap.js"],"names":[],"mappings":";;;;;;;;6BAAwB,kBAAkB;;;;qBACxB,OAAO;;;;IAClB,SAAS,sBAAT,SAAS;;AAGhB,IAAM,SAAS,GAAG,mBAAM,WAAW,CAAC;;;AAClC,WAAS,EAAE;AACT,YAAQ,EAAE,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,UAAU;AACzD,WAAO,EAAE,SAAS,CAAC,IAAI;AACvB,aAAS,EAAE,SAAS,CAAC,IAAI;AACzB,SAAK,EAAE,SAAS,CAAC,MAAM;AACvB,eAAW,EAAE,SAAS,CAAC,MAAM;GAC9B;;AAGD,iBAAe,EAAA,2BAAG;AAChB,WAAO;AACL,aAAO,EAAE,KAAK;AACd,eAAS,EAAE,KAAK;AAChB,WAAK,EAAE,CAAC;AACR,iBAAW,EAAE,aAAa;KAC3B,CAAC;GACH;;AAGD,iBAAe,EAAA,2BAAG;AAChB,WAAO;AACL,eAAS,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS;KAClC,CAAC;GACH;;AAGD,QAAM,EAAA,kBAAG;AACP,QAAI,CAAC,QAAQ,CAAC,EAAC,SAAS,EAAE,IAAI,EAAC,CAAC,CAAC;AACjC,QAAI,CAAC,UAAU,EAAE,CAAC;GACnB;;AAGD,UAAQ,EAAA,kBAAC,QAAQ,EAAE,OAAO,EAAE;AAC1B,QAAI,OAAO,EAAE;AACX,UAAI,CAAC,KAAK,GAAG,UAAU,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;KAC5C,MAAM;AACL,cAAQ,EAAE,CAAC;KACZ;GACF;;AAED,YAAU,EAAA,sBAAG;AACX,QAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;AACpB,kBAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC1B;GACF;;AAGD,MAAI,EAAA,gBAAG;;;AACL,QAAI,CAAC,QAAQ,CAAC;aAAM,MAAK,QAAQ,CAAC,EAAC,SAAS,EAAE,KAAK,EAAC,CAAC;KAAA,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;GAC1E;;AAGD,MAAI,EAAA,cAAC,CAAC,EAAE;;AAEN,QAAI,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE;AAC7C,aAAO;KACR;AACD,QAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;AACxB,UAAI,CAAC,IAAI,EAAE,CAAC;KACb,MAAM;AACL,UAAI,CAAC,MAAM,EAAE,CAAC;KACf;GACF;;AAGD,sBAAoB,EAAA,gCAAG;AACrB,QAAI,CAAC,UAAU,EAAE,CAAC;GACnB;;AAGD,QAAM,EAAA,kBAAG;AACP,QAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AACvF,QAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAC9B,gCAAY,OAAO,CAAC,KAAK,EAAE,EAAC,UAAU,EAAE,IAAI,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC,GAC7E,gCAAY,OAAO,CAAC,KAAK,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC;;AAEnD,WAAO,mBAAM,aAAa,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;GACjD;CACF,CAAC,CAAC;;qBAGY,SAAS","file":"ReactSwap.js","sourcesContent":["import extendProps from './extendProps.js';\nimport React from 'react';\nconst {PropTypes} = React;\n\n\nconst ReactSwap = React.createClass({\n  propTypes: {\n    children: PropTypes.arrayOf(PropTypes.element).isRequired,\n    isHover: PropTypes.bool,\n    isSwapped: PropTypes.bool,\n    delay: PropTypes.number,\n    dataHandler: PropTypes.string\n  },\n\n\n  getDefaultProps() {\n    return {\n      isHover: false,\n      isSwapped: false,\n      delay: 0,\n      dataHandler: 'swapHandler'\n    };\n  },\n\n\n  getInitialState() {\n    return {\n      isSwapped: !!this.props.isSwapped\n    };\n  },\n\n\n  expand() {\n    this.setState({isSwapped: true});\n    this.clearTimer();\n  },\n\n\n  setTimer(callback, timeout) {\n    if (timeout) {\n      this.timer = setTimeout(callback, timeout);\n    } else {\n      callback();\n    }\n  },\n\n  clearTimer() {\n    if (this.props.delay) {\n      clearTimeout(this.timer);\n    }\n  },\n\n\n  hide() {\n    this.setTimer(() => this.setState({isSwapped: false}), this.props.delay);\n  },\n\n\n  swap(e) {\n    // Should react on click only on [data-swap-handler=\"1\"] elements\n    if (!e.target.dataset[this.props.dataHandler]) {\n      return;\n    }\n    if (this.state.isSwapped) {\n      this.hide();\n    } else {\n      this.expand();\n    }\n  },\n\n\n  componentWillUnmount() {\n    this.clearTimer();\n  },\n\n\n  render() {\n    const content = this.state.isSwapped ? this.props.children[1] : this.props.children[0];\n    const props = this.props.isHover ?\n      extendProps(content.props, {onMouseOut: this.hide, onMouseOver: this.expand}) :\n      extendProps(content.props, {onClick: this.swap});\n\n    return React.createElement(content.type, props);\n  }\n});\n\n\nexport default ReactSwap;\n"]}